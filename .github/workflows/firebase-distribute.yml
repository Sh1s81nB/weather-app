name: Build & Distribute Android + iOS

on:
  workflow_dispatch:

jobs:
  android:
    name: Build & Upload Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant Gradle permissions
        run: chmod +x ./gradlew

      - name: Decrypt keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > composeApp/keystore.jks

      - name: Build release APK
        run: ./gradlew assembleRelease
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Upload Android to Firebase
        run: |
          firebase appdistribution:distribute composeApp/build/outputs/apk/release/composeApp-release.apk \
          --app ${{ secrets.FIREBASE_APP_ID }} \
          --testers shashankhr018@gmail.com \
          --token ${{ secrets.FIREBASE_TOKEN }}

  ios:
    name: Build & Upload iOS IPA
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby and install CocoaPods
        run: |
          sudo gem install cocoapods
          cd iosApp
          pod install

      - name: Set up provisioning and certificates
        run: |
          # Optional: If using automatic signing, pass -allowProvisioningUpdates in the build step
          echo "Using automatic signing. Make sure your Xcode project is set to automatic signing."

      - name: Build and Archive the App
        run: |
          xcodebuild -workspace iosApp/iosApp.xcworkspace \
                     -scheme iosApp \
                     -sdk iphoneos \
                     -configuration Release \
                     -archivePath build/iosApp.xcarchive \
                     -allowProvisioningUpdates \
                     clean archive

      - name: Export the .ipa
        run: |
          xcodebuild -exportArchive \
                     -archivePath build/iosApp.xcarchive \
                     -exportOptionsPlist iosApp/ExportOptions.plist \
                     -exportPath build \
                     -allowProvisioningUpdates

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Upload iOS .ipa to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/iosApp.ipa \
            --app ${{ secrets.FIREBASE_IOS_APP_ID }} \
            --testers shashankhr018@gmail.com \
            --token ${{ secrets.FIREBASE_TOKEN }}